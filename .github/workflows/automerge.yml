name: Auto Merge Pull Requests

on:
  pull_request_review:
    types:
      - submitted

jobs:
  auto-merge:
    runs-on: ubuntu-latest

    steps:
      # Check approvals and merge
      - name: Check and Merge Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Required number of approvals
          REQUIRED_APPROVALS=2

          # Extract pull request number and repository information
          PR_NUMBER=$(jq -r .pull_request.number < $GITHUB_EVENT_PATH)
          OWNER=$(jq -r .repository.owner.login < $GITHUB_EVENT_PATH)
          REPO=$(jq -r .repository.name < $GITHUB_EVENT_PATH)

          echo "Processing Pull Request #$PR_NUMBER in $OWNER/$REPO"

          # Fetch reviews using the GitHub API
          REVIEWS=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$OWNER/$REPO/pulls/$PR_NUMBER/reviews")

          # Count approvals
          APPROVAL_COUNT=$(echo "$REVIEWS" | jq '[.[] | select(.state == "APPROVED")] | length')

          echo "Approvals: $APPROVAL_COUNT / $REQUIRED_APPROVALS"

          if [ "$APPROVAL_COUNT" -ge "$REQUIRED_APPROVALS" ]; then
            echo "Merging Pull Request #$PR_NUMBER"
            curl -X PUT -s -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Accept: application/vnd.github+json" \
              "https://api.github.com/repos/$OWNER/$REPO/pulls/$PR_NUMBER/merge" \
              -d '{"merge_method": "rebase"}'
          else
            echo "Not enough approvals to merge."
          fi
